#!/bin/sh

### Package: nix-install-bluez
### Version: v20211111.2300
### Author: Michael Gan "xmixahlx" michaelbgan@gmail.com
### License: GPLv3
### Script Dependencies: (none)

## OVERRIDES
# NIXTOOLSDIR
if [ -z $NIXTOOLSDIR ]; then
 NIXTOOLSDIR="`pwd`"
fi
echo "*** NIXTOOLSDIR selected is $NIXTOOLSDIR."

# INSTALLDEPS
if [ -z $INSTALLDEPS ]; then
 INSTALLDEPS=debian
fi
echo "*** INSTALLDEPS selected is $INSTALLDEPS."

# GITBRANCH
# Upstream branch is master
if [ -z $GITBRANCH ]; then
 GITBRANCH=master
fi
echo "*** GITBRANCH selected is $GITBRANCH."

## VARS
RESDIR=$NIXTOOLSDIR/resources
DEVDIR=$NIXTOOLSDIR/upstream
GITURL=https://github.com
GITREPO=bluez
GITTREE=bluez
PKGDIR=$GITTREE\_$GITBRANCH

## DEPS
# Provide INSTALLDEPS=debian to install dependencies.
if [ $INSTALLDEPS = debian ]; then
# sudo apt-get -y build-dep bluez
 sudo apt-get -y install build-essential coreutils libc-bin make
fi

## PREP
set -e
mkdir -p $DEVDIR
cd $DEVDIR

## GIT
[ -d $PKGDIR ] || git clone --recursive --depth=1 $GITURL/$GITREPO/$GITTREE.git --branch=$GITBRANCH $PKGDIR
cd $PKGDIR
git clean -dfx
git reset --hard
git pull
git submodule update --init --recursive --depth=1

## CONFIGURE
./bootstrap
#./configure --prefix=/usr/local --exec-prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu \
#--sysconfdir=/etc \
./configure --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu \
--exec-prefix=/usr --sysconfdir=/etc --localstatedir=/var \
--enable-threads --enable-library --enable-test --enable-nfc --enable-sap --enable-a2dp \
--enable-avrcp --enable-network --enable-hid --enable-hog --enable-health \
--enable-tools --enable-monitor --enable-udev --enable-cups --enable-mesh --enable-midi \
--enable-obex --enable-btpclient --enable-external-ell --enable-client \
--enable-systemd --enable-datafiles --enable-manpages --enable-testing \
--enable-experimental --enable-deprecated --enable-sixaxis --enable-hid2hci --enable-logger --enable-admin

## BUILD
make -j `nproc`

## INSTALL
sudo make install
sudo ldconfig

## RESTART
sudo systemctl daemon-reload
sudo systemctl stop bluetooth
sudo systemctl disable bluetooth
sudo systemctl enable bluetooth
sudo systemctl start bluetooth
sudo systemctl daemon-reload

## EXIT
exit

## ENJOY
