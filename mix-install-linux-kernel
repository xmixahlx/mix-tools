#!/bin/sh

### Package: mix-install-linux-kernel
### Version: v0.20250605.2300
### Author: Michael Gan "xmixahlx" michaelbgan@gmail.com
### License: GPLv3
### Script Dependencies: (none)

### OVERRIDES

## MIXTOOLSDIR
if [ -z "$MIXTOOLSDIR" ]; then
 MIXTOOLSDIR="`pwd`"
 PATH="$MIXTOOLSDIR:$PATH"
fi
echo "*** MIXTOOLSDIR selected is $MIXTOOLSDIR."

## INSTALLDEPS
if [ -z "$INSTALLDEPS" ]; then
 INSTALLDEPS="debian"
fi
echo "*** INSTALLDEPS selected is $INSTALLDEPS."

## STABLEVER
if [ -z "$STABLEVER" ]; then
 STABLEVER="6.15"
fi
echo "*** STABLEVER selected is $STABLEVER."

## MAINVER
if [ -z "$MAINVER" ]; then
 MAINVER="6.16"
fi
echo "*** MAINVER selected is $MAINVER."

## POINTVER
if [ -z "$POINTVER" ]; then
 POINTVER="none"
fi
echo "*** POINTVER selected is $POINTVER."

## RCVER
if [ -z "$RCVER" ]; then
 RCVER="none"
fi
echo "*** RCVER selected is $RCVER."

## BRANCH
if [ "$RCVER" != "none" ]; then
 BRANCH="mainline"
else
 BRANCH="stable"
fi
if [ -z "$BRANCH" ]; then
 BRANCH="stable"
fi
echo "*** BRANCH selected is $BRANCH."

## SELECTEDVER
if [ "$BRANCH" = "mainline" ]; then
 SELECTEDVER="$MAINVER"
fi
if [ "$BRANCH" = "stable" ]; then
 SELECTEDVER="$STABLEVER"
fi
echo "*** SELECTEDVER selected is $SELECTEDVER."

## KERNELCONFIG
if [ -z "$KERNELCONFIG" ]; then
 KERNELCONFIG="/boot/config-`uname -r`"
fi
echo "*** KERNELCONFIG selected is $KERNELCONFIG."

## KERNELPATCH
if [ -z "$KERNELPATCH" ]; then
 KERNELPATCH="none"
fi
echo "*** KERNELPATCH selected is $KERNELPATCH."

## KERNELSCRIPTS
if [ -z "$KERNELSCRIPTS" ]; then
 KERNELSCRIPTS="yes"
fi
echo "*** KERNELSCRIPTS selected is $KERNELSCRIPTS."

## KERNELSCRIPTSDEBUG
if [ -z "$KERNELSCRIPTSDEBUG" ]; then
 KERNELSCRIPTSDEBUG="no"
fi
echo "*** KERNELSCRIPTSDEBUG selected is $KERNELSCRIPTSDEBUG."

## KERNELSCRIPTSRT
if [ -z "$KERNELSCRIPTSRT" ]; then
 KERNELSCRIPTSRT="no"
fi
echo "*** KERNELSCRIPTSRT selected is $KERNELSCRIPTSRT."

## CACHYOSPATCH
if [ -z "$CACHYOSPATCH" ]; then
 CACHYOSPATCH="yes"
fi
echo "*** CACHYOSPATCH selected is $CACHYOSPATCH."

## BUILDVER
if [ -z "$BUILDVER" ]; then
 BUILDVER="xmixahlx1"
fi
echo "*** BUILDVER selected is $BUILDVER."

## BUILDVERBOSE
# options are 0, 1, or 2
if [ -z "$BUILDVERBOSE" ]; then
 BUILDVERBOSE="0"
fi
echo "*** BUILDVERBOSE selected is $BUILDVERBOSE."

## MTUNE
if [ -z "$MTUNE" ]; then
 MTUNE="znver4"
fi
echo "*** MTUNE selected is $MTUNE."

## KCFLAGS
if [ -z "$KCFLAGS" ]; then
 KCFLAGS="-O2 -march=$MTUNE -mtune=$MTUNE -Wno-error"
fi
echo "*** KCFLAGS selected is $KCFLAGS."

## LINUXDIR
if [ -z "$LINUXDIR" ]; then
 LINUXDIR="/home/$USER/Development/linux"
fi
echo "*** LINUXDIR selected is $LINUXDIR."

## TMPDIR
if [ -z "$TMPDIR" ]; then
 TMPDIR="/tmp/mix-tools"
fi
echo "*** TMPDIR selected is $TMPDIR."

## VARS
CONFIGSDIR="$LINUXDIR/CONFIGS"
PACKAGESDIR="$LINUXDIR/PACKAGES"
SOURCESDIR="$LINUXDIR/SOURCES"
UPSTREAMDIR="$LINUXDIR/UPSTREAM"

## INSTALLDEPS
if [ "$INSTALLDEPS" = "debian" ]; then
 sudo apt-get -y install dwarves bc flex ccache build-essential gcc g++
fi

## CLEAN
rm -Rf "$TMPDIR/linux-upstream"

## PREP
set -e
mkdir -p "$LINUXDIR"
mkdir -p "$CONFIGSDIR"
mkdir -p "$PACKAGESDIR"
mkdir -p "$SOURCESDIR"
mkdir -p "$UPSTREAMDIR"
mkdir -p "$TMPDIR"

## DOWNLOAD
cd "$SOURCESDIR"

# Download Stable
echo "*** Downloading base STABLEVER $STABLEVER source."
[ -f "linux-$STABLEVER.tar.gz" ] || wget "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-$STABLEVER.tar.gz"

# Download Stable Pointversion
if [ "$BRANCH" = "stable" ]; then
 echo "*** Downloading $BRANCH branch source."
 if [ "$POINTVER" != "none" ]; then
  echo "*** Downloading POINTVER $POINTVER source."
  [ -f "patch-$STABLEVER.$POINTVER.xz" ] || wget "https://cdn.kernel.org/pub/linux/kernel/v6.x/patch-$STABLEVER.$POINTVER.xz"
 fi
fi

# Download Mainline Release Candidate
if [ "$BRANCH" = "mainline" ]; then
 echo "*** Processing $BRANCH branch downloads."
 if [ "$RCVER" != "none" ]; then
  echo "*** Processing $BRANCH branch $MAINVER-rc$RCVER."
  if [ ! -f "linux-$MAINVER-rc$RCVER-$STABLEVER.patch.gz" ]; then
   rm -f "linux-$MAINVER-rc$RCVER-$STABLEVER.patch"
   wget "https://git.kernel.org/torvalds/p/v$MAINVER-rc$RCVER/v$STABLEVER" -O "linux-$MAINVER-rc$RCVER-$STABLEVER.patch"
   gzip "linux-$MAINVER-rc$RCVER-$STABLEVER.patch"
   rm -f "linux-$MAINVER-rc$RCVER-$STABLEVER.patch"
  fi
 fi
fi

# Prepare CACHYOSPATCH
if [ "$CACHYOSPATCH" = "yes" ]; then
 # Create Git
 cd "$UPSTREAMDIR"
 if [ ! -d "cachyos-kernel-patches" ]; then
  git clone https://github.com/cachyos/kernel-patches.git cachyos-kernel-patches
 fi
 # Update Git
 cd cachyos-kernel-patches
 git clean -dfx
 git reset --hard
 git pull
 # Delete Old Patch
 rm -f "$SOURCESDIR/$SELECTEDVER-cachyos-base-all-bore.patch.gz"
 # Create Patch
 cat "$SELECTEDVER/all/0001-cachyos-base-all.patch" "$SELECTEDVER/sched/0001-bore-cachy.patch" >\
 "$SOURCESDIR/$SELECTEDVER-cachyos-base-all-bore.patch"
 cd "$SOURCESDIR"
 gzip "$SELECTEDVER-cachyos-base-all-bore.patch"
 rm -f "$SELECTEDVER-cachyos-base-all-bore.patch"
fi

## UNPACK
cd "$TMPDIR"
tar xf "$SOURCESDIR/linux-$STABLEVER.tar.gz"

## RENAME DIRECTORY
mv "linux-$STABLEVER" linux-upstream

## CHANGE DIRECTORY
cd linux-upstream

## PATCH
# Patch stable
if [ "$BRANCH" = "stable" ]; then
 echo "*** Processing stable patches."
 if [ "$POINTVER" != "none" ]; then
  # POINTVER PATCH
  echo "*** Applying linux-$STABLEVER.$POINTVER patch"
  xzcat "$SOURCESDIR/patch-$STABLEVER.$POINTVER.xz" | patch -p1
 else
  echo "*** Not applying POINTVER patch."
 fi
fi
# Patch mainline
if [ "$BRANCH" = "mainline" ]; then
 echo "*** Processing mainline patches."
 if [ "$RCVER" != "none" ]; then
  echo "*** Applying linux-$MAINVER-rc$RCVER-$STABLEVER patch"
  gzip -dc "$SOURCESDIR/linux-$MAINVER-rc$RCVER-$STABLEVER.patch.gz" | patch -p1
 else
  echo "*** Not applying RCVER patch."
 fi
fi
# Patch CachyOS
if [ "$CACHYOSPATCH" = "yes" ]; then
 echo "*** Applying CachyOS all base + bore patch."
 gzip -dc "$SOURCESDIR/$SELECTEDVER-cachyos-base-all-bore.patch.gz" | patch -p1
fi

# KERNELPATCH
if [ "$KERNELPATCH" != "none" ]; then
 patch -p1 < "$KERNELPATCH"
fi

## CONFIG
cp "$KERNELCONFIG" .config

## KERNELSCRIPTS
if [ "$KERNELSCRIPTS" = "yes" ]; then
 ./scripts/config --set-str LOCALVERSION -$MTUNE-$BUILDVER
 ./scripts/config --set-val PREEMPT_NONE n
 ./scripts/config --set-val PREEMPT_VOLUNTARY n
 ./scripts/config --set-val PREEMPT_RT n
 ./scripts/config --set-val PREEMPT y
 ./scripts/config --set-val PREEMPT_DYNAMIC y
 ./scripts/config --set-val HZ_100 n
 ./scripts/config --set-val HZ_250 n
 ./scripts/config --set-val HZ_300 n
 ./scripts/config --set-val HZ_1000 y
 ./scripts/config --set-val CPU_FREQ_GOV_PERFORMANCE y
 ./scripts/config --set-val CPU_FREQ_GOV_POWERSAVE y
 ./scripts/config --set-val CPU_FREQ_GOV_USERSPACE y
 ./scripts/config --set-val CPU_FREQ_GOV_ONDEMAND y
 ./scripts/config --set-val CPU_FREQ_GOV_CONSERVATIVE y
 ./scripts/config --set-val CPU_FREQ_DEFAULT_GOV_PERFORMANCE y
 ./scripts/config --set-val X86_AMD_PSTATE_DEFAULT_MODE 2
 ./scripts/config --set-val ZSWAP_DEFAULT_ON y
 ./scripts/config --set-val ZSWAP_SHRINKER_DEFAULT_ON y
 ./scripts/config --set-val MODULE_COMPRESS y
 ./scripts/config --set-val MODULE_COMPRESS_ALL y
 ./scripts/config --set-val ZSWAP_ZPOOL_DEFAULT_ZSMALLOC y
 ./scripts/config --set-val ZRAM_BACKEND_LZ4 y
 ./scripts/config --set-val ZRAM_BACKEND_LZ4HC y
 ./scripts/config --set-val ZRAM_BACKEND_ZSTD y
 ./scripts/config --set-val ZRAM_BACKEND_DEFLATE y
 ./scripts/config --set-val ZRAM_BACKEND_842 y
 ./scripts/config --set-val ZRAM_BACKEND_LZO y
 ./scripts/config --set-val ZRAM_DEF_COMP_LZO y
 ./scripts/config --set-val DRM_ACCEL y
 ./scripts/config --set-val DRM_ACCEL_AMDXDNA m
 ./scripts/config --set-val DRM_ACCEL_IVPU m
 ./scripts/config --set-val SND_AMD_ASOC_RENOIR m
 ./scripts/config --set-val SND_AMD_ASOC_REMBRANDT m
 ./scripts/config --set-val SND_SOC_AMD_ACP_PCI m
 ./scripts/config --set-val SND_AMD_ASOC_ACP63 m
 ./scripts/config --set-val SND_AMD_ASOC_ACP70 m
 ./scripts/config --set-val SND_SOC_SOF_AMD_ACP63 m
 ./scripts/config --set-val SND_SOC_SOF_AMD_ACP70 m
 ./scripts/config --set-val SND_SOC_AMD_LEGACY_MACH m
 ./scripts/config --set-val SND_SOC_AMD_SOF_MACH m
 ./scripts/config --set-val SND_SOC_AMD_SOF_SDW_MACH m
 ./scripts/config --set-val AMD_WBRF y
 ./scripts/config --set-val AMD_QDMA m
 ./scripts/config --set-val DRM_AMD_ISP y
 ./scripts/config --set-val WIRELESS_HOTKEY m
 ./scripts/config --set-val NTFS3_FS m
 ./scripts/config --set-val NTFS3_LZX_XPRESS y
 ./scripts/config --set-val NFS_LOCALIO y
 ./scripts/config --set-val CIFS_COMPRESSION y
 ./scripts/config --set-val PINCTRL_AMDISP y
 ./scripts/config --set-val ZRAM_DEF_COMP_ZSTD y
 ./scripts/config --set-val MODULE_COMPRESS_ZSTD y
 ./scripts/config --set-val ZSWAP_COMPRESSOR_DEFAULT_ZSTD y
 ./scripts/config --set-val EXT4_FS y
 ./scripts/config --set-val BTRFS_FS y
 ./scripts/config --set-val CRYPTO_KRB5ENC m
 ./scripts/config --set-val CRYPTO_KRB5 m
fi

## KERNELSCRIPTSDEBUG
if [ "$KERNELSCRIPTSDEBUG" = "no" ]; then
 ./scripts/config --set-val DEBUG_MISC n
 ./scripts/config --undefine GDB_SCRIPTS
 ./scripts/config --undefine DEBUG_INFO
 ./scripts/config --undefine DEBUG_INFO_SPLIT
 ./scripts/config --undefine DEBUG_INFO_REDUCED
 ./scripts/config --undefine DEBUG_INFO_COMPRESSED
 ./scripts/config --disable DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT
 ./scripts/config --set-val  DEBUG_INFO_NONE       y
 ./scripts/config --set-val  DEBUG_INFO_DWARF5     n
fi

## CACHYOSPATCH
if [ "$CACHYOSPATCH" = "yes" ]; then
 ./scripts/config --set-str LOCALVERSION -cachyos-$MTUNE-$BUILDVER
 ./scripts/config --set-val CACHY y
 ./scripts/config --set-val USER_NS_UNPRIVILEGED y
 ./scripts/config --set-val SCHED_BORE y
 ./scripts/config --set-val CC_OPTIMIZE_FOR_PERFORMANCE y #?
 ./scripts/config --set-val MZEN4 y #?
 ./scripts/config --set-val HZ_500 n
 ./scripts/config --set-val HZ_600 n
 ./scripts/config --set-val HZ_750 n
 ./scripts/config --set-val HZ_1000 y
 ./scripts/config --set-val MIN_BASE_SLICE_NS 2000000
 ./scripts/config --set-val MQ_IOSCHED_ADIOS y
 ./scripts/config --set-val MQ_IOSCHED_DEFAULT_ADIOS y
 ./scripts/config --set-val VHBA m
 ./scripts/config --set-val V4L2_LOOPBACK m
 ./scripts/config --set-val AMD_PRIVATE_COLOR y
fi

## KERNELSCRIPTSRT
# Note: Starting with 6.12-rc1 RT is now in mainline
if [ "$KERNELSCRIPTSRT" = "yes" ]; then
 if [ "$CACHYOSPATCH" = "yes" ]; then
  ./scripts/config --set-str LOCALVERSION -rt-cachyos-$MTUNE-$BUILDVER
 else
  ./scripts/config --set-str LOCALVERSION -rt-$MTUNE-$BUILDVER
 fi
 ./scripts/config --set-val PREEMPT_NONE n
 ./scripts/config --set-val PREEMPT_VOLUNTARY n
 ./scripts/config --set-val PREEMPT n
 ./scripts/config --set-val PREEMPT_DYNAMIC n
 ./scripts/config --set-val PREEMPT_RT y
 ./scripts/config --set-val HZ_100 n
 ./scripts/config --set-val HZ_250 n
 ./scripts/config --set-val HZ_300 n
 ./scripts/config --set-val HZ_1000 y
fi

## OLDCONFIG
make oldconfig -j `nproc`

## MENUCONFIG
make menuconfig -j `nproc`

## BUILD
CC="$CC" CXX="$CXX" CPP="$CPP" \
make \
KCFLAGS="$KCFLAGS" KCPPFLAGS="$KCFLAGS" \
KBUILD_VERBOSE="$BUILDVERBOSE" \
-j `nproc` bindeb-pkg

## EXIT
exit

## ENJOY
