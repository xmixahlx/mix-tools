#!/bin/sh

### Package: mix-install-ffmpeg
### Version: v0.20250503.2300
### Author: Michael Gan "xmixahlx" michaelbgan@gmail.com
### License: GPLv3
### Script Dependencies: svt-hevc, x265, x264, vmaf, lensfun, aribcaption, qrencode, quirc, uavs3d, vvenc

### OVERRIDES

## MIXTOOLSDIR
if [ -z "$MIXTOOLSDIR" ]; then
 MIXTOOLSDIR="`pwd`"
 PATH="$MIXTOOLSDIR:$PATH"
fi

## INSTALLDEPS
if [ -z "$INSTALLDEPS" ]; then
 INSTALLDEPS="debian"
fi
echo "*** INSTALLDEPS selected is $INSTALLDEPS."

## GITBRANCH
# Upstream branch is "master", release tags are "n#.#(.#)", branches are "release/#.#".
if [ -z "$GITBRANCH" ]; then
 GITBRANCH="master"
fi
echo "*** GITBRANCH selected is $GITBRANCH."

## DESTDIR
if [ -z "$DESTDIR" ]; then
 DESTDIR="/usr/local"
fi
echo "*** DESTDIR selected is $DESTDIR."

## BUILDCONFIG
# Options are minimal or full
if [ -z "$BUILDCONFIG" ]; then
 BUILDCONFIG="full"
fi
echo "*** BUILDCONFIG selected is $BUILDCONFIG."

## PKGVER
# Options include 7.0, 7.1, and upstream. Default is 7.1.
# Define
VERSION70PARAMS="--enable-libdvdnav --enable-libdvdread --enable-libqrencode"
# --enable-libquirc
VERSION71PARAMS="$VERSION70PARAMS --enable-libvvenc"
# Default
if [ -z "$PKGVER" ]; then
 PKGVER="master"
fi
# 7.0
if [ "$PKGVER" = "7.0" ];  then
 VERSIONPARAMS="$VERSION70PARAMS"
fi
# 7.1
if [ "$PKGVER" = "7.1" ];  then
 VERSIONPARAMS="$VERSION70PARAMS $VERSION71PARAMS"
fi
# master
if [ "$PKGVER" = "master" ];  then
 VERSIONPARAMS="$VERSION70PARAMS $VERSION71PARAMS"
fi

## SVTAV1PSY
if [ -z "$SVTAV1PSY" ]; then
 SVTAV1PSY=ON
fi
# Check
if [ "$SVTAV1PSY" = "ON" ]; then
 echo "*** SVTAV1PSY is enabled."
fi

## VARS
DATE="`date +%Y%m%d%H%M%S`"
RESDIR="$MIXTOOLSDIR/resources"
DEVDIR="$MIXTOOLSDIR/upstream"
GITURL="https://github.com"
GITREPO="ffmpeg"
GITTREE="ffmpeg"
PKGDIR="$GITTREE-$GITBRANCH"
MULTILIBDIR="`gcc -dumpmachine`"

## DEPS
# Provide INSTALLDEPS=debian to install dependencies.
if [ "$INSTALLDEPS" = "debian" ]; then
  sudo apt-get -y build-dep ffmpeg
  sudo apt-get -y install build-essential coreutils libc-bin wget tar bzip2 patch make \
  libudev-dev libdrm-dev libvpl-dev liblc3-dev libqrencode-dev libssh-dev libtls-dev \
  libpocketsphinx-dev
fi

## PREP
set -e
mkdir -p "$DEVDIR"
cd "$DEVDIR"

## GIT
[ -d "$PKGDIR" ] || git clone --recursive --depth=100 "$GITURL/$GITREPO/$GITTREE.git" --branch="$GITBRANCH" "$PKGDIR"
cd "$PKGDIR"
git clean -dfx
git reset --hard HEAD
git pull
git submodule update --init --depth=100

## PATCH
# Support SVT-AV1-PSY Extended CRF
if [ "$SVTAV1PSY" = "ON" ]; then
 echo "*** PATCHING ffmpeg for SVT-AV1-PSY extended CRF on master or 7.1 branch."
 if [ "$PKGVER" = "7.1" ]; then
  patch -p1 < "$RESDIR/ffmpeg/ffmpeg_svt-av1-psy_extended-crf_master.patch"
 fi
 if [ "$PKGVER" = "master" ]; then
  patch -p1 < "$RESDIR/ffmpeg/ffmpeg_svt-av1-psy_extended-crf_7.1.patch"
 fi
fi

## CONFIGURE
# options are minimal and full
if [ "$BUILDCONFIG" = "minimal" ]; then
 echo "*** BUILDCONFIG selected is $BUILDCONFIG."
 ./configure --prefix="$DESTDIR" --libdir="$DESTDIR/lib/$MULTILIBDIR" --shlibdir="$DESTDIR/lib/$MULTILIBDIR" \
 --enable-gpl --enable-version3 --enable-nonfree  --enable-shared --enable-pic --disable-debug \
 --enable-lto --cc="$CC" --cxx="$CXX" --extra-cflags="$CFLAGS" --extra-cxxflags="$CXXFLAGS"
fi
if [ "$BUILDCONFIG" = "full" ]; then
 echo "\n*** Using full BUILDCONFIG.\n"
 ./configure --prefix="$DESTDIR" --libdir="$DESTDIR/lib/$MULTILIBDIR" --shlibdir="$DESTDIR/lib/$MULTILIBDIR" \
 --enable-gpl --enable-version3 --enable-nonfree  --enable-shared --enable-pic --disable-debug \
 --enable-lto --cc="$CC" --cxx="$CXX" --extra-cflags="$CFLAGS" --extra-cxxflags="$CXXFLAGS" \
 --enable-chromaprint --enable-frei0r --enable-gcrypt --enable-gmp --enable-gnutls \
 --enable-ladspa --enable-lcms2 --enable-libaom --enable-libaribb24 --enable-libaribcaption \
 --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca \
 --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libdavs2 --enable-libdc1394 \
 --enable-libfdk-aac --enable-libflite --enable-libfontconfig \
 --enable-libfreetype --enable-libfribidi --enable-libharfbuzz --enable-libgme \
 --enable-libgsm --enable-libiec61883 --enable-libilbc --enable-libjack --enable-libjxl \
 --enable-libklvanc --enable-libkvazaar --enable-liblensfun \
 --enable-libmodplug --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb \
 --enable-libopenh264 --enable-libopenjpeg --enable-libopenmpt \
 --enable-libopus --enable-libplacebo --enable-libpulse \
 --enable-librabbitmq --enable-librav1e --enable-librist --enable-librsvg \
 --enable-librist --enable-librsvg --enable-librubberband --enable-librtmp --enable-libshaderc \
 --enable-libshine --enable-libsmbclient --enable-libsnappy --enable-libsoxr --enable-libspeex \
 --enable-libsrt --enable-libssh --enable-libsvtav1 --enable-libtesseract \
 --enable-libtheora --enable-libtls --enable-libtwolame --enable-libuavs3d \
 --enable-libv4l2 --enable-libvidstab --enable-libvmaf --enable-libvo-amrwbenc --enable-libvorbis \
 --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 \
 --enable-libxavs2 --enable-libxcb \
 --enable-libxcb-shm --enable-libxcb-xfixes --enable-libxcb-shape --enable-libxvid --enable-libxml2 \
 --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 \
 --enable-libmysofa --enable-openal --enable-opencl --enable-opengl \
 --enable-pocketsphinx --enable-vapoursynth --enable-libvpl $VERSIONPARAMS
fi

## Notes
# disabled omx
# ??? lensfun
# openssl and mbedtls are not selected, preferring gnutls
# glslang not selected, preferring shaderc
# decklink not selected, not found
# jni not selected, not found
# celt not selected, old
# lc3 not selected, broken
# lcevdec not selected, broken
# mfx not selected, preferring vpl
# npp not selected, unavailable
# opencv todo (newer version?)
# openvino todo
# tensorflow todo
# libtorch todo (newer version?)
# xavs not selected, preferring xavs2
# xeve xevd todo
# mmal old
# rkmpp old/arm64

## BUILD
make -j `nproc`

## INSTALL
sudo make install
sudo ldconfig

## EXIT
exit

## ENJOY
