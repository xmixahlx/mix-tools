#!/bin/sh

### Package: mix-install-vulkan-tools
### Version: v0.20250629.2300
### Author: Michael Gan "xmixahlx" michaelbgan@gmail.com
### License: GPLv3
### Script Dependencies: (none)

### OVERRIDES

## MIXTOOLSDIR
if [ -z "$MIXTOOLSDIR" ]; then
 MIXTOOLSDIR="`pwd`"
 PATH="$MIXTOOLSDIR:$PATH"
fi
echo "*** MIXTOOLSDIR selected is $MIXTOOLSDIR."

## INSTALLDEPS
if [ -z "$INSTALLDEPS" ]; then
 INSTALLDEPS="debian"
fi
echo "*** INSTALLDEPS selected is $INSTALLDEPS."

## GITBRANCH
# Upstream branch is main
if [ -z "$GITBRANCH" ]; then
 GITBRANCH="main"
fi
echo "*** GITBRANCH selected is $GITBRANCH."

## DESTDIR
if [ -z "$DESTDIR" ]; then
 DESTDIR="/usr/local"
fi
echo "*** DESTDIR selected is $DESTDIR."

## TMPDIR
if [ -z "$TMPDIR" ]; then
 TMPDIR="/tmp/mix-tools"
fi
echo "*** TMPDIR selected is $TMPDIR."

## BUILDTYPE
if [ -z "$BUILDTYPE" ]; then
 BUILDTYPE="release"
fi
echo "*** BUILDTYPE selected is $BUILDTYPE."

## VARS
RESDIR="$MIXTOOLSDIR/resources"
DEVDIR="$MIXTOOLSDIR/upstream"
GITURL="https://github.com"
GITREPO="khronosgroup"
GITTREE="vulkan-tools"
PKGDIR="$GITTREE-$GITBRANCH"
MULTILIBDIR="`gcc -dumpmachine`"

## DEPS
# Provide INSTALLDEPS=debian to install dependencies.
if [ "$INSTALLDEPS" = "debian" ]; then
 sudo apt-get -y build-deps vulkan-tools
 sudo apt-get -y install build-essential coreutils libc-bin git make cmake \
 libvulkan-volk-dev
fi

## PREP
set -e
mkdir -p "$DEVDIR"
cd "$DEVDIR"

## CLEAN
sudo rm -Rf "$PKGDIR/tmpbuild"

## GIT
[ -d "$PKGDIR" ] || git clone --recursive --depth=1 "$GITURL/$GITREPO/$GITTREE.git" --branch="$GITBRANCH" "$PKGDIR"
cd "$PKGDIR"
git clean -dfx
git reset --hard
git pull
git submodule update --init --recursive --depth=1

## CONFIGURE
cmake -DCMAKE_INSTALL_PREFIX="$DESTDIR" -DCMAKE_INSTALL_LIBDIR="$DESTDIR/lib/$MULTILIBDIR" \
-DCMAKE_BUILD_TYPE="$BUILDTYPE" -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
-DCMAKE_PREFIX_PATH="$DESTDIR/include/vulkan" \
-DBUILD_CUBE=OFF -B tmpbuild -G Ninja

# BUILD_CUBE=OFF set due to error TBC

## BUILD
#cmake --build ./tmpbuild --config Release -j `nproc`
ninja -C tmpbuild

## INSTALL
#sudo cmake --install ./tmpbuild
sudo ninja -C tmpbuild install
sudo ldconfig

## EXIT
echo "*** Done."
exit

## ENJOY
