diff --git a/libavcodec/libsvtav1.c b/libavcodec/libsvtav1.c
index 79b28eb4df..acdcb845d1 100644
--- a/libavcodec/libsvtav1.c
+++ b/libavcodec/libsvtav1.c
@@ -69,7 +69,7 @@ typedef struct SvtContext {
     // User options.
     AVDictionary *svtav1_opts;
     int enc_mode;
-    int crf;
+    float crf;
     int qp;
 } SvtContext;
 
@@ -205,6 +205,7 @@ static void handle_side_data(AVCodecContext *avctx,
     }
 }
 
+#define MAX_QP_VALUE 63
 static int config_enc_params(EbSvtAv1EncConfiguration *param,
                              AVCodecContext *avctx)
 {
@@ -213,7 +214,7 @@ static int config_enc_params(EbSvtAv1EncConfiguration *param,
     const AVDictionaryEntry av_unused *en = NULL;
 
     // Update param from options
-    if (svt_enc->enc_mode >= -1)
+    if (svt_enc->enc_mode >= -3)
         param->enc_mode             = svt_enc->enc_mode;
 
     if (avctx->bit_rate) {
@@ -233,8 +234,12 @@ static int config_enc_params(EbSvtAv1EncConfiguration *param,
             FFMAX(avctx->bit_rate, avctx->rc_max_rate);
 
     if (svt_enc->crf > 0) {
-        param->qp                   = svt_enc->crf;
+        param->qp                   = FFMIN(MAX_QP_VALUE, (uint32_t)svt_enc->crf);
         param->rate_control_mode    = 0;
+
+        // Calculate the quarter-step offset
+        uint32_t extended_q_index   = (uint32_t)(svt_enc->crf * 4);
+        param->extended_crf_qindex_offset = extended_q_index - param->qp * 4;
     } else if (svt_enc->qp > 0) {
         param->qp                   = svt_enc->qp;
         param->rate_control_mode    = 0;
@@ -694,7 +699,7 @@ static av_cold int eb_enc_close(AVCodecContext *avctx)
 #define VE AV_OPT_FLAG_VIDEO_PARAM | AV_OPT_FLAG_ENCODING_PARAM
 static const AVOption options[] = {
     { "preset", "Encoding preset",
-      OFFSET(enc_mode), AV_OPT_TYPE_INT, { .i64 = -2 }, -2, MAX_ENC_PRESET, VE },
+      OFFSET(enc_mode), AV_OPT_TYPE_INT, { .i64 = -4 }, -4, MAX_ENC_PRESET, VE },
 
     FF_AV1_PROFILE_OPTS
 
@@ -726,8 +731,8 @@ static const AVOption options[] = {
         { LEVEL("7.3", 73) },
 #undef LEVEL
 
-    { "crf", "Constant Rate Factor value", OFFSET(crf),
-      AV_OPT_TYPE_INT, { .i64 = 0 }, 0, 63, VE },
+    { "crf", "Constant Rate Factor value (can use quarter-step increments)",
+      OFFSET(crf), AV_OPT_TYPE_FLOAT, { .dbl = 0 }, 0, 70, VE },
     { "qp", "Initial Quantizer level value", OFFSET(qp),
       AV_OPT_TYPE_INT, { .i64 = 0 }, 0, 63, VE },
     { "svtav1-params", "Set the SVT-AV1 configuration using a :-separated list of key=value parameters", OFFSET(svtav1_opts), AV_OPT_TYPE_DICT, { 0 }, 0, 0, VE },
