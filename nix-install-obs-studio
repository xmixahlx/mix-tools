### Package: nix-install-obs-studio
### Version: v20210424.2300
### Author: Michael Gan "xmixahlx" michaelbgan@gmail.com
### License: GPLv3
### Script Dependencies: (none)

## OVERRIDES
# NIXTOOLSDIR
if [ -z $NIXTOOLSDIR ]; then
 NIXTOOLSDIR="`pwd`"
 PATH=$NIXTOOLSDIR:$PATH
fi
echo "*** NIXTOOLSDIR selected is $NIXTOOLSDIR"

# INSTALLDEPS
if [ -z $INSTALLDEPS ]; then
 INSTALLDEPS=debian
fi
echo "*** INSTALLDEPS selected is $INSTALLDEPS"

# GITBRANCH
if [ -z $GITBRANCH ]; then
 GITBRANCH=master
fi
echo "*** GITBRANCH selected is $GITBRANCH"

## VARS
RESDIR=$NIXTOOLSDIR/resources
DEVDIR=$NIXTOOLSDIR/upstream
GITURL=https://github.com
GITREPO=obsproject
GITTREE=obs-studio
PKGDIR=$GITTREE\_$GITBRANCH

## DEPS
# Provide INSTALLDEPS=debian to install dependencies.
if [ $INSTALLDEPS = debian ]; then
 sudo apt-get -y build-dep obs-studio obs-plugins
 sudo apt-get -y install build-essential coreutils libc-bin git cmake \
 qtbase5-private-dev
fi

## PREP
set -e
mkdir -p $DEVDIR
cd $DEVDIR

## CEF
[ -d cef_binary_4280_linux64 ] || wget https://cdn-fastly.obsproject.com/downloads/cef_binary_4280_linux64.tar.bz2
tar -xjf ./cef_binary_4280_linux64.tar.bz2

## GIT
[ -d $PKGDIR ] || git clone --depth=1 --recursive $GITURL/$GITREPO/$GITTREE.git --branch=$GITBRANCH $PKGDIR
cd $PKGDIR
git clean -f
git reset --hard
git pull
git submodule update --init --recursive --depth=1

## CLEAN
rm -Rf tmpbuild

## PATCH
for patch in $PR; do
 [ -f $DEVDIR/PKGDIR\_$PR.patch ] || rm -f $DEVDIR/$PKGDIR\_$PR.patch
 wget https://patch-diff.githubusercontent.com/raw/$GITREPO/$GITTREE/pull/$PR.patch -O $DEVDIR/$PKGDIR\_$PR.patch
 git apply $DEVDIR/$PKGDIR\_$PR.patch
done

## CONFIGURE
mkdir tmpbuild
cd tmpbuild
cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DOBS_LIBRARY_DESTINATION=lib/x86_64-linux-gnu -DOBS_MULTIARCH_SUFFIX=/x86_64-linux-gnu \
-DDISABLE_UPDATE_MODULE=TRUE -DUNIX_STRUCTURE=1 -DCMAKE_BUILD_TYPE=release -DBUILD_BROWSER=1 -DENABLE_PIPEWIRE=1 .. \
-DCEF_ROOT_DIR="../../cef_binary_4280_linux64" -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

## BUILD
make -j `nproc`

## INSTALL
sudo make install
sudo ldconfig

## EXIT
exit

## ENJOY
